# !/bin/python
# -*- coding: utf-8 -*-
u"""SecureTea Social Engineering
Project:
    ╔═╗┌─┐┌─┐┬ ┬┬─┐┌─┐╔╦╗┌─┐┌─┐
    ╚═╗├┤ │  │ │├┬┘├┤  ║ ├┤ ├─┤
    ╚═╝└─┘└─┘└─┘┴└─└─┘ ╩ └─┘┴ ┴
    Author: Digvijay Bhosale <digvijayb1729@gmail.com> August 16 2021
    Version: 1.0
    Module: SecureTea
"""
import urllib.parse
import urllib.request
import subprocess
import os
import json


class MalwareAnalysis:
    def __init__(self, file, filename):
        self.file = file
        self.filename = filename
        self.API_KEY = '8c3be18d935b21602ccaecb7224e1dd1dd938058b294520417681e430d962b1c'
        self.report_id = ''
        self.results = ''

    def runner(self):
        self.virustotal_file_upload()
        self.virustotal_get_results()
        self.show_results()

    def virustotal_file_upload(self):
        file_size = os.path.getsize(self.filename)
        if int(file_size) < 32000000:
            base_url = 'https://www.virustotal.com/api/v3/files'
            headers = 'x-apikey: ' + self.API_KEY
            file_path = '@' + self.filename

            process = subprocess.Popen(['curl', '--request', 'POST', '--url', base_url,
                                        '--header', headers,
                                        '--form', 'file=' + file_path],
                                       stdout=subprocess.PIPE,
                                       stderr=subprocess.PIPE)
            stdout, stderr = process.communicate()
            data = stdout.decode('utf-8')
            stderr = stderr.decode('utf-8')
            json_data = json.loads(data)
            self.report_id = json_data['data']['id']

        else:
            print('File Size greater than 32MB')
            print('Current file size is :'+str(file_size))
            print('Kindly visit https://www.virustotal.com/ and submit file')

    def virustotal_get_results(self):
        if self.report_id == '':
            print('No report ID available')
            return
        base_url = 'https://www.virustotal.com/api/v3/analyses/'
        url = base_url + str(self.report_id)
        headers = 'x-apikey: ' + self.API_KEY

        process = subprocess.Popen(['curl', '--request', 'GET', '--url', url,
                                    '--header', headers],
                                   stdout=subprocess.PIPE,
                                   stderr=subprocess.PIPE)
        stdout, stderr = process.communicate()
        data = stdout.decode('utf-8')
        stderr = stderr.decode('utf-8')
        print(data)
        self.results = json.loads(data)

    def show_results(self):
        if self.results == '':
            print('No results available')
            return
        verbosity = int(input('Enter Verbosity (Default : 2) : ') or 2)
        if verbosity == 1:
            pass


